Open Vehicle Monitoring System
==============================


The Server
==========

The server is a simple open source server which talks two protocols - one to the car and the other to
the cellphone App.

The car protocol is built on TCP using encrypted communication packets. See the documentation
directory on github for further details on the protocol itself.

The drupal server also includes a web interface for basic functions such as setting the password,
registering the car and checking status (see 'drupal' directory in github).

To deploy an OVMS server, you will need the ovms_server.pl script, the ovms_server.conf configuration
file suitably configured, the ovms_server.sql database tables in a mysql database, and optionally
the *.vece files (to convert error code to messages for different vehicle types).

The other scripts are purely for development and testing purposes.


Android Push Notifications
==========================

...are based on Firebase Cloud Messaging (FCM), which is part of the Google Cloud Services.

Special CPAN modules needed:
  - Net::SSLeay             -- Perl bindings for OpenSSL and LibreSSL by Chris Novakovic
                                [https://metacpan.org/dist/Net-SSLeay]
  - WWW::FCM::HTTP::V1      -- FCM library by Yui Takeuchi
                                [https://metacpan.org/pod/WWW::FCM::HTTP::V1]

To be able to send push notifications to Android devices, you need to register a Firebase project.

Creating a new Firebase project automatically creates a new Google Cloud project. If you already
have a Cloud project, you can simply add a Firebase project to that.
(About Firebase & Cloud projects: https://firebase.google.com/docs/projects/learn-more)

Guide: https://firebase.google.com/docs/android/setup

Create the Firebase project:

  - Log in to the Firebase Console: https://console.firebase.google.com/
  - Add project
    - select an existing Cloud project to extend, or enter a new name
    - disable Analytics when asked
  - Note the project number (this is your sender ID)

Register the App:

  - On the project's main page, click on the Android icon to add an App
    - Enter package name: com.openvehicles.OVMS
    - leave nickname & SHA sum blank
    - Click "Continue" until getting back to the dashboard

Create a server key:

  - Open the project settings from the menu or via the App icon
    - Switch to the "Service Accounts" tab
    - Click "Generate new private key"

Copy the downloaded key file into your OVMS server's "conf" directory, then addâ€¦

  api_key_file=conf/<yourkeyfile.json>

to the "[gcm]" section of your "conf/ovms_server.conf".

Verify the server can read the file, but no other users on a shared server.
Check the server startup log for errors.

When registering a vehicle in the App, enter your project number as noted above
as the "Sender ID".

If the server encounters permission errors when sending notifications, verify
the Cloud project has the APIs "Firebase Cloud Messaging API" and "Firebase
Installations API" enabled. Note: enabling new APIs can take some time to
propagate.


